{"version":3,"sources":["components/Person.js","components/PersonForm.js","components/Notification.js","components/Filter.js","services/persons.js","App.js","index.js"],"names":["Persons","persons","deletePerson","map","person","name","number","onClick","id","PersonForm","newNumber","newName","addPerson","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","Notification","notification","className","message","Filter","baseUrl","axios","get","then","res","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","setNotification","useEffect","personService","notifyWith","setTimeout","personsToShow","length","filter","p","toLowerCase","includes","event","target","preventDefault","existing","find","window","confirm","retunedPerson","console","log","addedPerson","concat","catch","err","response","Person","toDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7021b0cf.chunk.js","sourcesContent":["import React from 'react'\n\nconst Persons = ({ persons, deletePerson }) => {\n  return (\n    persons.map(person=>\n      <p key={person.id}>\n        {person.name} {person.number} \n        <button onClick={() => deletePerson(person.id)}>delete</button>\n      </p>\n    )\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst PersonForm = ({ \n  newNumber, \n  newName, \n  addPerson, \n  handleNameChange, \n  handleNumberChange }) => {\n\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: \n        <input\n          value={newName}\n          onChange={handleNameChange}\n        />\n      </div>\n      <div>\n        number:\n        <input \n          value={newNumber}\n          onChange={handleNumberChange}          \n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null\n  }\n\n  return (\n    <div className={notification.type}>\n      {notification.message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\n\nconst Filter = ({ value, onChange }) => {\n\n  return (\n    <input\n    value={value}\n    onChange={onChange}\n  />\n  )\n}\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const req = axios.get(baseUrl)\n  return req.then(res => {\n    return res.data\n  })\n}\n\nconst create = (newObject) => {\n  const req = axios.post(baseUrl, newObject)\n  return req.then(res => res.data)\n}\n\nconst remove = (id) => {\n  const req = axios.delete(`${baseUrl}/${id}`)\n  return req.then(res => res.data)\n}\n\nconst update = (id, newObject) => {\n  const req = axios.put(`${baseUrl}/${id}`, newObject)\n  return req.then(res => res.data)\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Person'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport './app.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((data) => {\n        setPersons(data)\n      })\n  }, [])\n\n  const notifyWith = (message, type='success') => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }  \n  \n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }  \n\n  const handleNewFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  } \n\n  const deletePerson = (id) => {\n    const toDelete = persons.find(p => p.id === id)\n    const ok = window.confirm(`Delete ${toDelete.name}`)\n    if (ok) {\n      personService.remove(id)\n        .then(res => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`Deleted ${toDelete.name}`)\n        }).catch(() => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`${toDelete.name} had already been removed`, 'error')\n        })\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const existing = persons.find(p => p.name === newName)\n    if (existing) {\n      const ok = window.confirm(`${existing.name} already in phonebook, replace the old number with new one?`)\n      if (ok) {\n        personService\n        .update(existing.id, {\n          name: existing.name,\n          number:newNumber\n        })\n        .then(retunedPerson => {\n          setPersons(persons.map(person => person.id !== existing.id ? person : retunedPerson))\n          notifyWith(`Changed number of  ${existing.name}`)\n          setNewName('')\n          setNewNumber('')\n          console.log('existingexisting',existing)\n          console.log('persons', persons)\n        })\n      }\n\n    } else {\n      personService\n        .create({\n          name: newName,\n          number: newNumber   \n        })\n        .then(addedPerson => {\n          setPersons(persons.concat(addedPerson))\n          notifyWith(`Added ${newName}`)\n          setNewName('')\n          setNewNumber('')\n          console.log(newName, newNumber)\n        })\n        .catch(err => {\n          console.log('err', err.response.data.err)\n          notifyWith(err.response.data.err, 'error')\n        })\n    }\n  }\n\n  const personsToShow = newFilter.length === 0 ?\n    persons : \n    persons.filter(p => p.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification notification={notification} />\n\n      filter shown with: \n      <Filter\n        value={newFilter}\n        onChange={handleNewFilterChange}\n      />\n\n      <h3>add a new</h3>\n      <PersonForm \n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newNumber={newNumber}\n        newName={newName}\n        addPerson={addPerson}\n      />\n     \n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}